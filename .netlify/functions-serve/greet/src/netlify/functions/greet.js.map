{
  "version": 3,
  "sources": ["../../home/vincent/Music/hiit/netlify/functions/greet.ts", "../../home/vincent/Music/hiit/netlify/service/utils.ts", "../../home/vincent/Music/hiit/netlify/service/classes/product.ts", "../../home/vincent/Music/hiit/netlify/service/classes/stock-manager.ts", "../../home/vincent/Music/hiit/netlify/service/seeds/index.ts"],
  "sourceRoot": "/tmp/tmp-14253-qr9yViNXFbI0",
  "sourcesContent": ["import { default as stockManager } from \"../service/classes/stock-manager\";\nimport { products } from \"../service/seeds/index\";\nimport { ProductProperties } from \"../service/types\";\n\nexport const handler = async function name(_event, _context) {\n  products.forEach(function (product: ProductProperties) {\n    stockManager.create(product)\n  })\n  return { body: JSON.stringify(stockManager.list()), statusCode: 200 };\n};\n\n", "export function compare(word1: string, word2: string) {\n    return word1.toLowerCase() === word2.toLowerCase()\n}\n", "const product: import(\"../types\").ProductMethods  = {\n    add(qty){\n        this.inventory -= qty;\n    },\n    remove(qty) {\n        this.inventory += qty;\n    }\n}\n\nexport default product;", "import { ProductProperties, Product } from \"../types\";\nimport { compare } from \"../utils\";\nimport productMethods from \"./product\";\n\nconst stockManager = {\n    products: [],\n    create(product: ProductProperties): void {\n        this.products = [...this.products, Object.assign(product, productMethods)]\n    },\n    get(productName: string): Product | undefined {\n        return this.products.find(function (product: Product) { return compare(product.name, productName) })\n    },\n    list(): Product[] | [] {\n        return this.products;\n    },\n    sell(productName: string, qty = 1) {\n        let product = this.getProduct(productName);\n        if (!product) throw new Error(\"Product not found\")\n        product.add(qty);\n    },\n    restock(productName: string, qty = 10) {\n        let product = this.getProduct(productName);\n        if (!product) throw new Error(\"Product not found\")\n        product.remove(qty)\n    },\n}\n\nexport default stockManager;", "import { ProductProperties, Staff } from \"../types\";\n\nexport const products: ProductProperties[] = [\n  { \"name\": \"Local Sugar 250g\", \"inventory\": 4, \"reorderLevel\": 2 },\n  { \"name\": \"Kabras Sugar 500g\", \"inventory\": 20, \"reorderLevel\": 12 },\n  { \"name\": \"Kabras Sugar 1kg\", \"inventory\": 15, \"reorderLevel\": 10 },\n  { \"name\": \"Kabras Sugar 2kg\", \"inventory\": 10, \"reorderLevel\": 5 },\n  { \"name\": \"Kabras Sugar 5kg\", \"inventory\": 10, \"reorderLevel\": 5 }\n]\n\nexport const staff: Staff[] = [\n  { name: \"Julius Mutie\", role: \"WAREHOUSE\", id: 1111, password: \"password\" },\n  { name: \"Jackline Mwende\", role: \"RETAILER\", id: 2222, password: \"password\" },\n]"],
  "mappings": ";;;;;;;;;AAAA;AAAA;AAAA;;;ACAO,iBAAiB,OAAe,OAAe;AAClD,SAAO,MAAM,kBAAkB,MAAM;AAAA;;;ACDzC,IAAM,UAA8C;AAAA,EAChD,IAAI,KAAI;AACJ,SAAK,aAAa;AAAA;AAAA,EAEtB,OAAO,KAAK;AACR,SAAK,aAAa;AAAA;AAAA;AAI1B,IAAO,kBAAQ;;;ACLf,IAAM,eAAe;AAAA,EACjB,UAAU;AAAA,EACV,OAAO,UAAkC;AACrC,SAAK,WAAW,CAAC,GAAG,KAAK,UAAU,OAAO,OAAO,UAAS;AAAA;AAAA,EAE9D,IAAI,aAA0C;AAC1C,WAAO,KAAK,SAAS,KAAK,SAAU,UAAkB;AAAE,aAAO,QAAQ,SAAQ,MAAM;AAAA;AAAA;AAAA,EAEzF,OAAuB;AACnB,WAAO,KAAK;AAAA;AAAA,EAEhB,KAAK,aAAqB,MAAM,GAAG;AAC/B,QAAI,WAAU,KAAK,WAAW;AAC9B,QAAI,CAAC;AAAS,YAAM,IAAI,MAAM;AAC9B,aAAQ,IAAI;AAAA;AAAA,EAEhB,QAAQ,aAAqB,MAAM,IAAI;AACnC,QAAI,WAAU,KAAK,WAAW;AAC9B,QAAI,CAAC;AAAS,YAAM,IAAI,MAAM;AAC9B,aAAQ,OAAO;AAAA;AAAA;AAIvB,IAAO,wBAAQ;;;ACzBR,IAAM,WAAgC;AAAA,EAC3C,EAAE,QAAQ,oBAAoB,aAAa,GAAG,gBAAgB;AAAA,EAC9D,EAAE,QAAQ,qBAAqB,aAAa,IAAI,gBAAgB;AAAA,EAChE,EAAE,QAAQ,oBAAoB,aAAa,IAAI,gBAAgB;AAAA,EAC/D,EAAE,QAAQ,oBAAoB,aAAa,IAAI,gBAAgB;AAAA,EAC/D,EAAE,QAAQ,oBAAoB,aAAa,IAAI,gBAAgB;AAAA;;;AJH1D,IAAM,UAAU,oBAAoB,QAAQ,UAAU;AAC3D,WAAS,QAAQ,SAAU,UAA4B;AACrD,0BAAa,OAAO;AAAA;AAEtB,SAAO,EAAE,MAAM,KAAK,UAAU,sBAAa,SAAS,YAAY;AAAA;",
  "names": []
}
