{
  "version": 3,
  "sources": ["../../home/vincent/Music/hiit/netlify/functions/seed.ts", "../../home/vincent/Music/hiit/netlify/service/utils.ts", "../../home/vincent/Music/hiit/netlify/service/classes/product.ts", "../../home/vincent/Music/hiit/netlify/service/classes/reorders.ts", "../../home/vincent/Music/hiit/netlify/service/classes/stock-manager.ts", "../../home/vincent/Music/hiit/netlify/service/seeds/index.ts"],
  "sourceRoot": "/tmp/tmp-14253-fNHZJ20250JN",
  "sourcesContent": ["import { default as stockManager } from \"../service/classes/stock-manager\";\nimport reorderManager from \"../service/classes/reorders\";\nimport { products } from \"../service/seeds/index\";\nimport { ProductProperties } from \"../service/types\";\n\nexport const handler = async function name() {\n  products.forEach(function (product: ProductProperties) {\n    if (!stockManager.get(product.name)) stockManager.create(product)\n  });\n  stockManager.sell(\"Local Sugar 250g\", 2)\n  console.log(reorderManager.list());\n  return {\n    statusCode: 200, body: JSON.stringify({\n      success: true, products: stockManager.list()\n    })\n  }\n};\n\n", "export function compare(word1: string, word2: string) {\n    return word1.toLowerCase() === word2.toLowerCase()\n}\n", "const product: import(\"../types\").ProductMethods = {\n    remove(qty) {\n        if (this.inventory >= qty) {\n            this.inventory -= qty;\n        } else throw new Error(\"Low stock\");\n    },\n    add(qty) {\n        this.inventory += qty;\n    }\n}\n\nexport default product;", "import { Order, Reorder } from \"../types\"\nimport { compare } from \"../utils\";\nimport stockManager from \"./stock-manager\";\n\nconst reorderManager = {\n    orders: [],\n    create(productName: string, qty = 20): void {\n        let exists = this.orders.find(function (order:Reorder) {\n            return compare(order.productName, productName) && (order.status === \"UNPROCESSED\")\n        })\n        if(!exists) this.orders.unshift({ productName, qty, status: \"UNPROCESSED\" });\n    },\n    dispatch(productName: string): void {\n        let order = this.orders.find(function (order: Reorder) { order.productName === productName });\n        if (!order) throw new Error(\"Order not found\");\n        order.status = \"PROCESSED\";\n        stockManager.restock(order.productName, order.qty)\n    },\n    list(): [] | Order[] {\n        if (this.orders.length === 0) return []\n        return this.orders.map(function (order: Reorder) {\n            return { ...order, product: stockManager.get(order.productName) }\n        })\n    }\n}\n\nexport default reorderManager;", "import { ProductProperties, Product } from \"../types\";\nimport { compare } from \"../utils\";\nimport productMethods from \"./product\";\nimport reorderManager from \"./reorders\";\n\nconst stockManager = {\n    products: [],\n    create(product: ProductProperties): void {\n        this.products.unshift(Object.assign(product, productMethods));\n    },\n    get(productName: string): Product | undefined {\n        return this.products.find(function (product: Product) { return compare(product.name, productName) })\n    },\n    list(): Product[] | [] {\n        return this.products;\n    },\n    sell(productName: string, qty = 1) {\n        let product = this.get(productName);\n        if (!product) throw new Error(\"Product not found\")\n        product.remove(qty);\n        if (product.inventory <= product.reorderLevel) {\n            reorderManager.create(product.name)\n        }\n    },\n    restock(productName: string, qty = 10) {\n        let product = this.get(productName);\n        if (!product) throw new Error(\"Product not found\")\n        product.add(qty)\n    },\n}\n\nexport default stockManager;", "import { ProductProperties, Staff } from \"../types\";\n\nexport const products: ProductProperties[] = [\n  { \"name\": \"Local Sugar 250g\", \"inventory\": 4, \"reorderLevel\": 2 },\n  { \"name\": \"Kabras Sugar 500g\", \"inventory\": 20, \"reorderLevel\": 12 },\n  { \"name\": \"Kabras Sugar 1kg\", \"inventory\": 15, \"reorderLevel\": 10 },\n  { \"name\": \"Kabras Sugar 2kg\", \"inventory\": 10, \"reorderLevel\": 5 },\n  { \"name\": \"Kabras Sugar 5kg\", \"inventory\": 10, \"reorderLevel\": 5 }\n]\n\nexport const staff: Staff[] = [\n  { name: \"Julius Mutie\", role: \"WAREHOUSE\", id: 1111, password: \"password\" },\n  { name: \"Jackline Mwende\", role: \"RETAILER\", id: 2222, password: \"password\" },\n]"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;;;ACAO,iBAAiB,OAAe,OAAe;AAClD,SAAO,MAAM,kBAAkB,MAAM;AAAA;;;ACDzC,IAAM,UAA6C;AAAA,EAC/C,OAAO,KAAK;AACR,QAAI,KAAK,aAAa,KAAK;AACvB,WAAK,aAAa;AAAA;AACf,YAAM,IAAI,MAAM;AAAA;AAAA,EAE3B,IAAI,KAAK;AACL,SAAK,aAAa;AAAA;AAAA;AAI1B,IAAO,kBAAQ;;;ACPf,IAAM,iBAAiB;AAAA,EACnB,QAAQ;AAAA,EACR,OAAO,aAAqB,MAAM,IAAU;AACxC,QAAI,SAAS,KAAK,OAAO,KAAK,SAAU,OAAe;AACnD,aAAO,QAAQ,MAAM,aAAa,gBAAiB,MAAM,WAAW;AAAA;AAExE,QAAG,CAAC;AAAQ,WAAK,OAAO,QAAQ,EAAE,aAAa,KAAK,QAAQ;AAAA;AAAA,EAEhE,SAAS,aAA2B;AAChC,QAAI,QAAQ,KAAK,OAAO,KAAK,SAAU,QAAgB;AAAE,aAAM,gBAAgB;AAAA;AAC/E,QAAI,CAAC;AAAO,YAAM,IAAI,MAAM;AAC5B,UAAM,SAAS;AACf,0BAAa,QAAQ,MAAM,aAAa,MAAM;AAAA;AAAA,EAElD,OAAqB;AACjB,QAAI,KAAK,OAAO,WAAW;AAAG,aAAO;AACrC,WAAO,KAAK,OAAO,IAAI,SAAU,OAAgB;AAC7C,aAAO,iCAAK,QAAL,EAAY,SAAS,sBAAa,IAAI,MAAM;AAAA;AAAA;AAAA;AAK/D,IAAO,mBAAQ;;;ACrBf,IAAM,eAAe;AAAA,EACjB,UAAU;AAAA,EACV,OAAO,UAAkC;AACrC,SAAK,SAAS,QAAQ,OAAO,OAAO,UAAS;AAAA;AAAA,EAEjD,IAAI,aAA0C;AAC1C,WAAO,KAAK,SAAS,KAAK,SAAU,UAAkB;AAAE,aAAO,QAAQ,SAAQ,MAAM;AAAA;AAAA;AAAA,EAEzF,OAAuB;AACnB,WAAO,KAAK;AAAA;AAAA,EAEhB,KAAK,aAAqB,MAAM,GAAG;AAC/B,QAAI,WAAU,KAAK,IAAI;AACvB,QAAI,CAAC;AAAS,YAAM,IAAI,MAAM;AAC9B,aAAQ,OAAO;AACf,QAAI,SAAQ,aAAa,SAAQ,cAAc;AAC3C,uBAAe,OAAO,SAAQ;AAAA;AAAA;AAAA,EAGtC,QAAQ,aAAqB,MAAM,IAAI;AACnC,QAAI,WAAU,KAAK,IAAI;AACvB,QAAI,CAAC;AAAS,YAAM,IAAI,MAAM;AAC9B,aAAQ,IAAI;AAAA;AAAA;AAIpB,IAAO,wBAAQ;;;AC7BR,IAAM,WAAgC;AAAA,EAC3C,EAAE,QAAQ,oBAAoB,aAAa,GAAG,gBAAgB;AAAA,EAC9D,EAAE,QAAQ,qBAAqB,aAAa,IAAI,gBAAgB;AAAA,EAChE,EAAE,QAAQ,oBAAoB,aAAa,IAAI,gBAAgB;AAAA,EAC/D,EAAE,QAAQ,oBAAoB,aAAa,IAAI,gBAAgB;AAAA,EAC/D,EAAE,QAAQ,oBAAoB,aAAa,IAAI,gBAAgB;AAAA;;;ALF1D,IAAM,UAAU,sBAAsB;AAC3C,WAAS,QAAQ,SAAU,UAA4B;AACrD,QAAI,CAAC,sBAAa,IAAI,SAAQ;AAAO,4BAAa,OAAO;AAAA;AAE3D,wBAAa,KAAK,oBAAoB;AACtC,UAAQ,IAAI,iBAAe;AAC3B,SAAO;AAAA,IACL,YAAY;AAAA,IAAK,MAAM,KAAK,UAAU;AAAA,MACpC,SAAS;AAAA,MAAM,UAAU,sBAAa;AAAA;AAAA;AAAA;",
  "names": []
}
